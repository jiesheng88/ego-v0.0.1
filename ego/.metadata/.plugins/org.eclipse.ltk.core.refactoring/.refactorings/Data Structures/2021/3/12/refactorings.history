<?xml version="1.0" encoding="UTF-8"?>
<session version="1.0">&#x0A;<refactoring comment="Extract local variable &apos;split&apos; from expression &apos;suffixExpression.split(&quot; &quot;)&apos;&#x0D;&#x0A;- Original project: &apos;Data Structures&apos;&#x0D;&#x0A;- Variable name: &apos;split&apos;&#x0D;&#x0A;- Destination method: &apos;com.jie.stack.PolandNotation.getListString()&apos;&#x0D;&#x0A;- Variable expression: &apos;suffixExpression.split(&quot; &quot;)&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;split&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.jie.stack{PolandNotation.java" name="split" replace="true" selection="675 0" stamp="1615795643013" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;list&apos; from expression &apos;getListString(suffixExpression)&apos;&#x0D;&#x0A;- Original project: &apos;Data Structures&apos;&#x0D;&#x0A;- Variable name: &apos;list&apos;&#x0D;&#x0A;- Destination method: &apos;com.jie.stack.PolandNotation.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;getListString(suffixExpression)&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;list&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.jie.stack{PolandNotation.java" name="list" replace="true" selection="930 0" stamp="1615797098744" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;calculate&apos; from expression &apos;calculate(list)&apos;&#x0D;&#x0A;- Original project: &apos;Data Structures&apos;&#x0D;&#x0A;- Variable name: &apos;calculate&apos;&#x0D;&#x0A;- Destination method: &apos;com.jie.stack.PolandNotation.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;calculate(list)&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;calculate&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.jie.stack{PolandNotation.java" name="calculate" replace="true" selection="1013 0" stamp="1615797129244" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;charAt&apos; from expression &apos;s.charAt(i)&apos;&#x0D;&#x0A;- Original project: &apos;Data Structures&apos;&#x0D;&#x0A;- Variable name: &apos;charAt&apos;&#x0D;&#x0A;- Destination method: &apos;com.jie.stack.PolandNotation1.toInfixExpressionList()&apos;&#x0D;&#x0A;- Variable expression: &apos;s.charAt(i)&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;charAt&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.jie.stack{PolandNotation1.java" name="charAt" replace="true" selection="1480 0" stamp="1615813210208" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;infixExpressionList&apos; from expression &apos;toInfixExpressionList(expression)&apos;&#x0D;&#x0A;- Original project: &apos;Data Structures&apos;&#x0D;&#x0A;- Variable name: &apos;infixExpressionList&apos;&#x0D;&#x0A;- Destination method: &apos;com.jie.stack.PolandNotation1.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;toInfixExpressionList(expression)&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;infixExpressionList&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.jie.stack{PolandNotation1.java" name="infixExpressionList" replace="true" selection="1171 0" stamp="1615814082339" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;parseSuffixExpreesionList&apos; from expression &apos;parseSuffixExpreesionList(infixExpressionList)&apos;&#x0D;&#x0A;- Original project: &apos;Data Structures&apos;&#x0D;&#x0A;- Variable name: &apos;parseSuffixExpreesionList&apos;&#x0D;&#x0A;- Destination method: &apos;com.jie.stack.PolandNotation1.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;parseSuffixExpreesionList(infixExpressionList)&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;parseSuffixExpreesionList&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.jie.stack{PolandNotation1.java" name="parseSuffixExpreesionList" replace="true" selection="1390 0" stamp="1615859199088" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;way&apos; from expression &apos;getWay(map,1,1)&apos;&#x0D;&#x0A;- Original project: &apos;Data Structures&apos;&#x0D;&#x0A;- Variable name: &apos;way&apos;&#x0D;&#x0A;- Destination method: &apos;com.jie.recursion.Maze.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;getWay(map,1,1)&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;way&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.jie.recursion{Maze.java" name="way" replace="true" selection="647 0" stamp="1615862443813" version="1.0"/>&#x0A;<refactoring comment="Rename type &apos;com.jie.sort.Test&apos; to &apos;BinarySearch&apos;&#x0D;&#x0A;- Original project: &apos;Data Structures&apos;&#x0D;&#x0A;- Original element: &apos;com.jie.sort.Test&apos;&#x0D;&#x0A;- Renamed element: &apos;com.jie.sort.BinarySearch&apos;&#x0D;&#x0A;- Update references to refactored element&#x0D;&#x0A;- Update textual occurrences in comments and strings" description="Rename type &apos;Test&apos;" flags="589830" id="org.eclipse.jdt.ui.rename.type" input="/src&lt;com.jie.sort{Test.java[Test" matchStrategy="1" name="BinarySearch" qualified="false" references="true" similarDeclarations="false" stamp="1615944200997" textual="false" version="1.0"/>&#x0A;<refactoring comment="Rename type &apos;com.jie.sort.Test03_Select_Sort&apos; to &apos;Test02_Select_Sort&apos;&#x0D;&#x0A;- Original project: &apos;Data Structures&apos;&#x0D;&#x0A;- Original element: &apos;com.jie.sort.Test03_Select_Sort&apos;&#x0D;&#x0A;- Renamed element: &apos;com.jie.sort.Test02_Select_Sort&apos;&#x0D;&#x0A;- Update references to refactored element&#x0D;&#x0A;- Update textual occurrences in comments and strings" description="Rename type &apos;Test03_Select_Sort&apos;" flags="589830" id="org.eclipse.jdt.ui.rename.type" input="/src&lt;com.jie.sort{Test03_Select_Sort.java[Test03_Select_Sort" matchStrategy="1" name="Test02_Select_Sort" qualified="false" references="true" similarDeclarations="false" stamp="1615966458675" textual="false" version="1.0"/>&#x0A;<refactoring comment="Rename type &apos;com.jie.sort.Test02_Insert_Sort&apos; to &apos;Test03_Insert_Sort&apos;&#x0D;&#x0A;- Original project: &apos;Data Structures&apos;&#x0D;&#x0A;- Original element: &apos;com.jie.sort.Test02_Insert_Sort&apos;&#x0D;&#x0A;- Renamed element: &apos;com.jie.sort.Test03_Insert_Sort&apos;&#x0D;&#x0A;- Update references to refactored element&#x0D;&#x0A;- Update textual occurrences in comments and strings" description="Rename type &apos;Test02_Insert_Sort&apos;" flags="589830" id="org.eclipse.jdt.ui.rename.type" input="/src&lt;com.jie.sort{Test02_Insert_Sort.java[Test02_Insert_Sort" matchStrategy="1" name="Test03_Insert_Sort" qualified="false" references="true" similarDeclarations="false" stamp="1615966466427" textual="false" version="1.0"/>&#x0A;<refactoring comment="Rename type &apos;com.jie.sort.Test10_Radix_Sort&apos; to &apos;Test08_Radix_Sort&apos;&#x0D;&#x0A;- Original project: &apos;Data Structures&apos;&#x0D;&#x0A;- Original element: &apos;com.jie.sort.Test10_Radix_Sort&apos;&#x0D;&#x0A;- Renamed element: &apos;com.jie.sort.Test08_Radix_Sort&apos;&#x0D;&#x0A;- Update references to refactored element&#x0D;&#x0A;- Update textual occurrences in comments and strings" description="Rename type &apos;Test10_Radix_Sort&apos;" flags="589830" id="org.eclipse.jdt.ui.rename.type" input="/src&lt;com.jie.sort{Test10_Radix_Sort.java[Test10_Radix_Sort" matchStrategy="1" name="Test08_Radix_Sort" qualified="false" references="true" similarDeclarations="false" stamp="1615967236794" textual="false" version="1.0"/>&#x0A;<refactoring comment="Rename type &apos;com.jie.sort.Test08_Counting_Sort&apos; to &apos;Test10_Counting_Sort&apos;&#x0D;&#x0A;- Original project: &apos;Data Structures&apos;&#x0D;&#x0A;- Original element: &apos;com.jie.sort.Test08_Counting_Sort&apos;&#x0D;&#x0A;- Renamed element: &apos;com.jie.sort.Test10_Counting_Sort&apos;&#x0D;&#x0A;- Update references to refactored element&#x0D;&#x0A;- Update textual occurrences in comments and strings" description="Rename type &apos;Test08_Counting_Sort&apos;" flags="589830" id="org.eclipse.jdt.ui.rename.type" input="/src&lt;com.jie.sort{Test08_Counting_Sort.java[Test08_Counting_Sort" matchStrategy="1" name="Test10_Counting_Sort" qualified="false" references="true" similarDeclarations="false" stamp="1615967252189" textual="false" version="1.0"/>&#x0A;<refactoring accessors="true" comment="Delete element from project &apos;Data Structures&apos;&#x0D;&#x0A;- Original project: &apos;Data Structures&apos;&#x0D;&#x0A;- Original element: &apos;com.jie.sort.Test11_Topological_Sort.java&apos;" description="Delete element" element1="/src&lt;com.jie.sort{Test11_Topological_Sort.java" elements="1" flags="589830" id="org.eclipse.jdt.ui.delete" resources="0" stamp="1615967971637" subPackages="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;temp&apos; from expression &apos;stack.pop()&apos;&#x0D;&#x0A;- Original project: &apos;Data Structures&apos;&#x0D;&#x0A;- Variable name: &apos;temp&apos;&#x0D;&#x0A;- Destination method: &apos;com.jie.tree.BinaryTree.preOrderWithStack()&apos;&#x0D;&#x0A;- Variable expression: &apos;stack.pop()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;temp&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.jie.tree{BinaryTree.java" name="temp" replace="true" selection="1484 0" stamp="1616221694431" version="1.0"/>&#x0A;<refactoring comment="Rename type &apos;com.jie.tree.BinaryTree&apos; to &apos;PreOrder&apos;&#x0D;&#x0A;- Original project: &apos;Data Structures&apos;&#x0D;&#x0A;- Original element: &apos;com.jie.tree.BinaryTree&apos;&#x0D;&#x0A;- Renamed element: &apos;com.jie.tree.PreOrder&apos;&#x0D;&#x0A;- Update references to refactored element&#x0D;&#x0A;- Update textual occurrences in comments and strings" description="Rename type &apos;BinaryTree&apos;" flags="589830" id="org.eclipse.jdt.ui.rename.type" input="/src&lt;com.jie.tree{BinaryTree.java[BinaryTree" matchStrategy="1" name="PreOrder" qualified="false" references="true" similarDeclarations="false" stamp="1616221918447" textual="false" version="1.0"/>&#x0A;<refactoring comment="Copy element &apos;PreOrder.java&apos; to &apos;Data Structures/src/com.jie.tree&apos;&#x0D;&#x0A;- Original project: &apos;Data Structures&apos;&#x0D;&#x0A;- Destination element: &apos;Data Structures/src/com.jie.tree&apos;&#x0D;&#x0A;- Original element: &apos;com.jie.tree.PreOrder.java&apos;" description="Copy compilation unit" destination="/src&lt;com.jie.tree" element1="/src&lt;com.jie.tree{PreOrder.java" files="0" flags="589830" folders="0" id="org.eclipse.jdt.ui.copy" policy="org.eclipse.jdt.ui.copyResources" stamp="1616221952105" units="1" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;preOrderSearch&apos; from expression &apos;preOrderSearch(root,5)&apos;&#x0D;&#x0A;- Original project: &apos;Data Structures&apos;&#x0D;&#x0A;- Variable name: &apos;preOrderSearch&apos;&#x0D;&#x0A;- Destination method: &apos;com.jie.tree.PreOrder.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;preOrderSearch(root,5)&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;preOrderSearch&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.jie.tree{PreOrder.java" name="preOrderSearch" replace="true" selection="1068 0" stamp="1616227522906" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;infixOrderSearch&apos; from expression &apos;infixOrderSearch(root,5)&apos;&#x0D;&#x0A;- Original project: &apos;Data Structures&apos;&#x0D;&#x0A;- Variable name: &apos;infixOrderSearch&apos;&#x0D;&#x0A;- Destination method: &apos;com.jie.tree.InfixOrder.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;infixOrderSearch(root,5)&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;infixOrderSearch&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.jie.tree{InfixOrder.java" name="infixOrderSearch" replace="true" selection="829 0" stamp="1616227766880" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;postOrderSearch&apos; from expression &apos;postOrderSearch(root,5)&apos;&#x0D;&#x0A;- Original project: &apos;Data Structures&apos;&#x0D;&#x0A;- Variable name: &apos;postOrderSearch&apos;&#x0D;&#x0A;- Destination method: &apos;com.jie.tree.PostOrder.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;postOrderSearch(root,5)&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;postOrderSearch&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.jie.tree{PostOrder.java" name="postOrderSearch" replace="true" selection="825 0" stamp="1616227906845" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;tmp&apos; from expression &apos;queue.poll()&apos;&#x0D;&#x0A;- Original project: &apos;Data Structures&apos;&#x0D;&#x0A;- Variable name: &apos;tmp&apos;&#x0D;&#x0A;- Destination method: &apos;com.jie.tree.ArrBinaryTree.toList()&apos;&#x0D;&#x0A;- Variable expression: &apos;queue.poll()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;tmp&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.jie.tree{ArrBinaryTree.java" name="tmp" replace="true" selection="821 0" stamp="1616231075257" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;list&apos; from expression &apos;toList(root)&apos;&#x0D;&#x0A;- Original project: &apos;Data Structures&apos;&#x0D;&#x0A;- Variable name: &apos;list&apos;&#x0D;&#x0A;- Destination method: &apos;com.jie.tree.ArrBinaryTree.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;toList(root)&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;list&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.jie.tree{ArrBinaryTree.java" name="list" replace="true" selection="657 0" stamp="1616231328137" version="1.0"/>
</session>